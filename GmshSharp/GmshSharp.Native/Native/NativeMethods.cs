// <auto-generated>
// This code is generated by csbindgen.
// DON'T CHANGE THIS DIRECTLY.
// </auto-generated>
#pragma warning disable CS8500
#pragma warning disable CS8981
using System;
using System.Runtime.InteropServices;


namespace GmshSharp.Native
{
    public static unsafe partial class NativeMethods
    {
        const string __DllName = "gmsh";





        [DllImport(__DllName, EntryPoint = "gmshFree", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshFree(void* p);

        [DllImport(__DllName, EntryPoint = "gmshMalloc", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void* gmshMalloc(nuint n);

        [DllImport(__DllName, EntryPoint = "gmshInitialize", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshInitialize(int argc, byte** argv, int readConfigFiles, int run, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshIsInitialized", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern int gmshIsInitialized(int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshFinalize", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshFinalize(int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshOpen", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshOpen(byte* fileName, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshMerge", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshMerge(byte* fileName, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshWrite", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshWrite(byte* fileName, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshClear", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshClear(int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshOptionSetNumber", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshOptionSetNumber(byte* name, double value, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshOptionGetNumber", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshOptionGetNumber(byte* name, double* value, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshOptionSetString", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshOptionSetString(byte* name, byte* value, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshOptionGetString", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshOptionGetString(byte* name, byte** value, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshOptionSetColor", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshOptionSetColor(byte* name, int r, int g, int b, int a, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshOptionGetColor", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshOptionGetColor(byte* name, int* r, int* g, int* b, int* a, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshOptionRestoreDefaults", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshOptionRestoreDefaults(int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelAdd", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelAdd(byte* name, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelRemove", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelRemove(int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelGetCurrent", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelGetCurrent(byte** name, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelSetCurrent", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelSetCurrent(byte* name, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelGetFileName", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelGetFileName(byte** fileName, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelSetFileName", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelSetFileName(byte* fileName, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelGetEntities", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelGetEntities(int** dimTags, nuint* dimTags_n, int dim, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelSetEntityName", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelSetEntityName(int dim, int tag, byte* name, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelGetEntityName", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelGetEntityName(int dim, int tag, byte** name, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelRemoveEntityName", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelRemoveEntityName(byte* name, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelGetPhysicalGroups", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelGetPhysicalGroups(int** dimTags, nuint* dimTags_n, int dim, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelGetEntitiesForPhysicalGroup", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelGetEntitiesForPhysicalGroup(int dim, int tag, int** tags, nuint* tags_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelGetEntitiesForPhysicalName", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelGetEntitiesForPhysicalName(byte* name, int** dimTags, nuint* dimTags_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelGetPhysicalGroupsForEntity", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelGetPhysicalGroupsForEntity(int dim, int tag, int** physicalTags, nuint* physicalTags_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelAddPhysicalGroup", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern int gmshModelAddPhysicalGroup(int dim, int* tags, nuint tags_n, int tag, byte* name, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelRemovePhysicalGroups", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelRemovePhysicalGroups(int* dimTags, nuint dimTags_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelSetPhysicalName", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelSetPhysicalName(int dim, int tag, byte* name, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelGetPhysicalName", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelGetPhysicalName(int dim, int tag, byte** name, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelRemovePhysicalName", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelRemovePhysicalName(byte* name, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelSetTag", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelSetTag(int dim, int tag, int newTag, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelGetBoundary", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelGetBoundary(int* dimTags, nuint dimTags_n, int** outDimTags, nuint* outDimTags_n, int combined, int oriented, int recursive, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelGetAdjacencies", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelGetAdjacencies(int dim, int tag, int** upward, nuint* upward_n, int** downward, nuint* downward_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelGetEntitiesInBoundingBox", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelGetEntitiesInBoundingBox(double xmin, double ymin, double zmin, double xmax, double ymax, double zmax, int** dimTags, nuint* dimTags_n, int dim, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelGetBoundingBox", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelGetBoundingBox(int dim, int tag, double* xmin, double* ymin, double* zmin, double* xmax, double* ymax, double* zmax, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelGetDimension", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern int gmshModelGetDimension(int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelAddDiscreteEntity", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern int gmshModelAddDiscreteEntity(int dim, int tag, int* boundary, nuint boundary_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelRemoveEntities", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelRemoveEntities(int* dimTags, nuint dimTags_n, int recursive, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelGetEntityType", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelGetEntityType(int dim, int tag, byte** entityType, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelGetType", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelGetType(int dim, int tag, byte** entityType, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelGetEntityProperties", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelGetEntityProperties(int dim, int tag, int** integers, nuint* integers_n, double** reals, nuint* reals_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelGetParent", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelGetParent(int dim, int tag, int* parentDim, int* parentTag, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelGetNumberOfPartitions", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern int gmshModelGetNumberOfPartitions(int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelGetPartitions", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelGetPartitions(int dim, int tag, int** partitions, nuint* partitions_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelGetValue", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelGetValue(int dim, int tag, double* parametricCoord, nuint parametricCoord_n, double** coord, nuint* coord_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelGetDerivative", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelGetDerivative(int dim, int tag, double* parametricCoord, nuint parametricCoord_n, double** derivatives, nuint* derivatives_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelGetSecondDerivative", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelGetSecondDerivative(int dim, int tag, double* parametricCoord, nuint parametricCoord_n, double** derivatives, nuint* derivatives_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelGetCurvature", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelGetCurvature(int dim, int tag, double* parametricCoord, nuint parametricCoord_n, double** curvatures, nuint* curvatures_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelGetPrincipalCurvatures", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelGetPrincipalCurvatures(int tag, double* parametricCoord, nuint parametricCoord_n, double** curvatureMax, nuint* curvatureMax_n, double** curvatureMin, nuint* curvatureMin_n, double** directionMax, nuint* directionMax_n, double** directionMin, nuint* directionMin_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelGetNormal", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelGetNormal(int tag, double* parametricCoord, nuint parametricCoord_n, double** normals, nuint* normals_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelGetParametrization", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelGetParametrization(int dim, int tag, double* coord, nuint coord_n, double** parametricCoord, nuint* parametricCoord_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelGetParametrizationBounds", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelGetParametrizationBounds(int dim, int tag, double** min, nuint* min_n, double** max, nuint* max_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelIsInside", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern int gmshModelIsInside(int dim, int tag, double* coord, nuint coord_n, int parametric, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelGetClosestPoint", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelGetClosestPoint(int dim, int tag, double* coord, nuint coord_n, double** closestCoord, nuint* closestCoord_n, double** parametricCoord, nuint* parametricCoord_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelReparametrizeOnSurface", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelReparametrizeOnSurface(int dim, int tag, double* parametricCoord, nuint parametricCoord_n, int surfaceTag, double** surfaceParametricCoord, nuint* surfaceParametricCoord_n, int which, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelSetVisibility", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelSetVisibility(int* dimTags, nuint dimTags_n, int value, int recursive, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelGetVisibility", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelGetVisibility(int dim, int tag, int* value, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelSetVisibilityPerWindow", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelSetVisibilityPerWindow(int value, int windowIndex, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelSetColor", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelSetColor(int* dimTags, nuint dimTags_n, int r, int g, int b, int a, int recursive, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelGetColor", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelGetColor(int dim, int tag, int* r, int* g, int* b, int* a, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelSetCoordinates", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelSetCoordinates(int tag, double x, double y, double z, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelSetAttribute", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelSetAttribute(byte* name, byte** values, nuint values_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelRemoveAttribute", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelRemoveAttribute(byte* name, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshGenerate", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshGenerate(int dim, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshPartition", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshPartition(int numPart, nuint* elementTags, nuint elementTags_n, int* partitions, nuint partitions_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshUnpartition", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshUnpartition(int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshOptimize", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshOptimize(byte* method, int force, int niter, int* dimTags, nuint dimTags_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshRecombine", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshRecombine(int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshRefine", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshRefine(int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshSetOrder", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshSetOrder(int order, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshGetLastEntityError", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshGetLastEntityError(int** dimTags, nuint* dimTags_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshGetLastNodeError", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshGetLastNodeError(nuint** nodeTags, nuint* nodeTags_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshClear", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshClear(int* dimTags, nuint dimTags_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshRemoveElements", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshRemoveElements(int dim, int tag, nuint* elementTags, nuint elementTags_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshReverse", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshReverse(int* dimTags, nuint dimTags_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshReverseElements", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshReverseElements(nuint* elementTags, nuint elementTags_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshAffineTransform", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshAffineTransform(double* affineTransform, nuint affineTransform_n, int* dimTags, nuint dimTags_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshGetNodes", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshGetNodes(nuint** nodeTags, nuint* nodeTags_n, double** coord, nuint* coord_n, double** parametricCoord, nuint* parametricCoord_n, int dim, int tag, int includeBoundary, int returnParametricCoord, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshGetNodesByElementType", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshGetNodesByElementType(int elementType, nuint** nodeTags, nuint* nodeTags_n, double** coord, nuint* coord_n, double** parametricCoord, nuint* parametricCoord_n, int tag, int returnParametricCoord, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshGetNode", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshGetNode(nuint nodeTag, double** coord, nuint* coord_n, double** parametricCoord, nuint* parametricCoord_n, int* dim, int* tag, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshSetNode", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshSetNode(nuint nodeTag, double* coord, nuint coord_n, double* parametricCoord, nuint parametricCoord_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshRebuildNodeCache", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshRebuildNodeCache(int onlyIfNecessary, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshRebuildElementCache", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshRebuildElementCache(int onlyIfNecessary, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshGetNodesForPhysicalGroup", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshGetNodesForPhysicalGroup(int dim, int tag, nuint** nodeTags, nuint* nodeTags_n, double** coord, nuint* coord_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshGetMaxNodeTag", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshGetMaxNodeTag(nuint* maxTag, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshAddNodes", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshAddNodes(int dim, int tag, nuint* nodeTags, nuint nodeTags_n, double* coord, nuint coord_n, double* parametricCoord, nuint parametricCoord_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshReclassifyNodes", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshReclassifyNodes(int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshRelocateNodes", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshRelocateNodes(int dim, int tag, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshGetElement", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshGetElement(nuint elementTag, int* elementType, nuint** nodeTags, nuint* nodeTags_n, int* dim, int* tag, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshGetElementByCoordinates", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshGetElementByCoordinates(double x, double y, double z, nuint* elementTag, int* elementType, nuint** nodeTags, nuint* nodeTags_n, double* u, double* v, double* w, int dim, int strict, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshGetElementsByCoordinates", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshGetElementsByCoordinates(double x, double y, double z, nuint** elementTags, nuint* elementTags_n, int dim, int strict, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshGetLocalCoordinatesInElement", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshGetLocalCoordinatesInElement(nuint elementTag, double x, double y, double z, double* u, double* v, double* w, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshGetElementTypes", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshGetElementTypes(int** elementTypes, nuint* elementTypes_n, int dim, int tag, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshGetElementType", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern int gmshModelMeshGetElementType(byte* familyName, int order, int serendip, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshGetElementProperties", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshGetElementProperties(int elementType, byte** elementName, int* dim, int* order, int* numNodes, double** localNodeCoord, nuint* localNodeCoord_n, int* numPrimaryNodes, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshGetElementsByType", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshGetElementsByType(int elementType, nuint** elementTags, nuint* elementTags_n, nuint** nodeTags, nuint* nodeTags_n, int tag, nuint task, nuint numTasks, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshGetMaxElementTag", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshGetMaxElementTag(nuint* maxTag, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshPreallocateElementsByType", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshPreallocateElementsByType(int elementType, int elementTag, int nodeTag, nuint** elementTags, nuint* elementTags_n, nuint** nodeTags, nuint* nodeTags_n, int tag, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshGetElementQualities", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshGetElementQualities(nuint* elementTags, nuint elementTags_n, double** elementsQuality, nuint* elementsQuality_n, byte* qualityName, nuint task, nuint numTasks, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshAddElements", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshAddElements(int dim, int tag, int* elementTypes, nuint elementTypes_n, nuint** elementTags, nuint* elementTags_n, nuint elementTags_nn, nuint** nodeTags, nuint* nodeTags_n, nuint nodeTags_nn, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshAddElementsByType", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshAddElementsByType(int tag, int elementType, nuint* elementTags, nuint elementTags_n, nuint* nodeTags, nuint nodeTags_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshGetIntegrationPoints", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshGetIntegrationPoints(int elementType, byte* integrationType, double** localCoord, nuint* localCoord_n, double** weights, nuint* weights_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshGetJacobians", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshGetJacobians(int elementType, double* localCoord, nuint localCoord_n, double** jacobians, nuint* jacobians_n, double** determinants, nuint* determinants_n, double** coord, nuint* coord_n, int tag, nuint task, nuint numTasks, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshPreallocateJacobians", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshPreallocateJacobians(int elementType, int numEvaluationPoints, int allocateJacobians, int allocateDeterminants, int allocateCoord, double** jacobians, nuint* jacobians_n, double** determinants, nuint* determinants_n, double** coord, nuint* coord_n, int tag, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshGetJacobian", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshGetJacobian(nuint elementTag, double* localCoord, nuint localCoord_n, double** jacobians, nuint* jacobians_n, double** determinants, nuint* determinants_n, double** coord, nuint* coord_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshGetBasisFunctions", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshGetBasisFunctions(int elementType, double* localCoord, nuint localCoord_n, byte* functionSpaceType, int* numComponents, double** basisFunctions, nuint* basisFunctions_n, int* numOrientations, int* wantedOrientations, nuint wantedOrientations_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshGetBasisFunctionsOrientation", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshGetBasisFunctionsOrientation(int elementType, byte* functionSpaceType, int** basisFunctionsOrientation, nuint* basisFunctionsOrientation_n, int tag, nuint task, nuint numTasks, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshGetBasisFunctionsOrientationForElement", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshGetBasisFunctionsOrientationForElement(nuint elementTag, byte* functionSpaceType, int* basisFunctionsOrientation, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshGetNumberOfOrientations", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern int gmshModelMeshGetNumberOfOrientations(int elementType, byte* functionSpaceType, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshPreallocateBasisFunctionsOrientation", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshPreallocateBasisFunctionsOrientation(int elementType, int** basisFunctionsOrientation, nuint* basisFunctionsOrientation_n, int tag, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshGetEdges", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshGetEdges(nuint* nodeTags, nuint nodeTags_n, nuint** edgeTags, nuint* edgeTags_n, int** edgeOrientations, nuint* edgeOrientations_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshGetFaces", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshGetFaces(int faceType, nuint* nodeTags, nuint nodeTags_n, nuint** faceTags, nuint* faceTags_n, int** faceOrientations, nuint* faceOrientations_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshCreateEdges", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshCreateEdges(int* dimTags, nuint dimTags_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshCreateFaces", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshCreateFaces(int* dimTags, nuint dimTags_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshGetAllEdges", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshGetAllEdges(nuint** edgeTags, nuint* edgeTags_n, nuint** edgeNodes, nuint* edgeNodes_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshGetAllFaces", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshGetAllFaces(int faceType, nuint** faceTags, nuint* faceTags_n, nuint** faceNodes, nuint* faceNodes_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshAddEdges", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshAddEdges(nuint* edgeTags, nuint edgeTags_n, nuint* edgeNodes, nuint edgeNodes_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshAddFaces", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshAddFaces(int faceType, nuint* faceTags, nuint faceTags_n, nuint* faceNodes, nuint faceNodes_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshGetKeys", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshGetKeys(int elementType, byte* functionSpaceType, int** typeKeys, nuint* typeKeys_n, nuint** entityKeys, nuint* entityKeys_n, double** coord, nuint* coord_n, int tag, int returnCoord, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshGetKeysForElement", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshGetKeysForElement(nuint elementTag, byte* functionSpaceType, int** typeKeys, nuint* typeKeys_n, nuint** entityKeys, nuint* entityKeys_n, double** coord, nuint* coord_n, int returnCoord, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshGetNumberOfKeys", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern int gmshModelMeshGetNumberOfKeys(int elementType, byte* functionSpaceType, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshGetKeysInformation", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshGetKeysInformation(int* typeKeys, nuint typeKeys_n, nuint* entityKeys, nuint entityKeys_n, int elementType, byte* functionSpaceType, int** infoKeys, nuint* infoKeys_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshGetBarycenters", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshGetBarycenters(int elementType, int tag, int fast, int primary, double** barycenters, nuint* barycenters_n, nuint task, nuint numTasks, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshPreallocateBarycenters", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshPreallocateBarycenters(int elementType, double** barycenters, nuint* barycenters_n, int tag, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshGetElementEdgeNodes", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshGetElementEdgeNodes(int elementType, nuint** nodeTags, nuint* nodeTags_n, int tag, int primary, nuint task, nuint numTasks, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshGetElementFaceNodes", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshGetElementFaceNodes(int elementType, int faceType, nuint** nodeTags, nuint* nodeTags_n, int tag, int primary, nuint task, nuint numTasks, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshGetGhostElements", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshGetGhostElements(int dim, int tag, nuint** elementTags, nuint* elementTags_n, int** partitions, nuint* partitions_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshSetSize", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshSetSize(int* dimTags, nuint dimTags_n, double size, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshGetSizes", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshGetSizes(int* dimTags, nuint dimTags_n, double** sizes, nuint* sizes_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshSetSizeAtParametricPoints", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshSetSizeAtParametricPoints(int dim, int tag, double* parametricCoord, nuint parametricCoord_n, double* sizes, nuint sizes_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshSetSizeCallback", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshSetSizeCallback(delegate* unmanaged[Cdecl]<int, int, double, double, double, double, void*, double> callback, void* callback_data, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshRemoveSizeCallback", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshRemoveSizeCallback(int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshSetTransfiniteCurve", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshSetTransfiniteCurve(int tag, int numNodes, byte* meshType, double coef, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshSetTransfiniteSurface", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshSetTransfiniteSurface(int tag, byte* arrangement, int* cornerTags, nuint cornerTags_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshSetTransfiniteVolume", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshSetTransfiniteVolume(int tag, int* cornerTags, nuint cornerTags_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshSetTransfiniteAutomatic", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshSetTransfiniteAutomatic(int* dimTags, nuint dimTags_n, double cornerAngle, int recombine, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshSetRecombine", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshSetRecombine(int dim, int tag, double angle, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshSetSmoothing", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshSetSmoothing(int dim, int tag, int val, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshSetReverse", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshSetReverse(int dim, int tag, int val, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshSetAlgorithm", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshSetAlgorithm(int dim, int tag, int val, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshSetSizeFromBoundary", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshSetSizeFromBoundary(int dim, int tag, int val, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshSetCompound", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshSetCompound(int dim, int* tags, nuint tags_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshSetOutwardOrientation", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshSetOutwardOrientation(int tag, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshRemoveConstraints", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshRemoveConstraints(int* dimTags, nuint dimTags_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshEmbed", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshEmbed(int dim, int* tags, nuint tags_n, int inDim, int inTag, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshRemoveEmbedded", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshRemoveEmbedded(int* dimTags, nuint dimTags_n, int dim, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshGetEmbedded", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshGetEmbedded(int dim, int tag, int** dimTags, nuint* dimTags_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshReorderElements", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshReorderElements(int elementType, int tag, nuint* ordering, nuint ordering_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshComputeRenumbering", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshComputeRenumbering(nuint** oldTags, nuint* oldTags_n, nuint** newTags, nuint* newTags_n, byte* method, nuint* elementTags, nuint elementTags_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshRenumberNodes", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshRenumberNodes(nuint* oldTags, nuint oldTags_n, nuint* newTags, nuint newTags_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshRenumberElements", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshRenumberElements(nuint* oldTags, nuint oldTags_n, nuint* newTags, nuint newTags_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshSetPeriodic", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshSetPeriodic(int dim, int* tags, nuint tags_n, int* tagsMaster, nuint tagsMaster_n, double* affineTransform, nuint affineTransform_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshGetPeriodic", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshGetPeriodic(int dim, int* tags, nuint tags_n, int** tagMaster, nuint* tagMaster_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshGetPeriodicNodes", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshGetPeriodicNodes(int dim, int tag, int* tagMaster, nuint** nodeTags, nuint* nodeTags_n, nuint** nodeTagsMaster, nuint* nodeTagsMaster_n, double** affineTransform, nuint* affineTransform_n, int includeHighOrderNodes, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshGetPeriodicKeys", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshGetPeriodicKeys(int elementType, byte* functionSpaceType, int tag, int* tagMaster, int** typeKeys, nuint* typeKeys_n, int** typeKeysMaster, nuint* typeKeysMaster_n, nuint** entityKeys, nuint* entityKeys_n, nuint** entityKeysMaster, nuint* entityKeysMaster_n, double** coord, nuint* coord_n, double** coordMaster, nuint* coordMaster_n, int returnCoord, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshImportStl", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshImportStl(int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshGetDuplicateNodes", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshGetDuplicateNodes(nuint** tags, nuint* tags_n, int* dimTags, nuint dimTags_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshRemoveDuplicateNodes", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshRemoveDuplicateNodes(int* dimTags, nuint dimTags_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshRemoveDuplicateElements", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshRemoveDuplicateElements(int* dimTags, nuint dimTags_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshSplitQuadrangles", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshSplitQuadrangles(double quality, int tag, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshSetVisibility", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshSetVisibility(nuint* elementTags, nuint elementTags_n, int value, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshGetVisibility", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshGetVisibility(nuint* elementTags, nuint elementTags_n, int** values, nuint* values_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshClassifySurfaces", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshClassifySurfaces(double angle, int boundary, int forReparametrization, double curveAngle, int exportDiscrete, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshCreateGeometry", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshCreateGeometry(int* dimTags, nuint dimTags_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshCreateTopology", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshCreateTopology(int makeSimplyConnected, int exportDiscrete, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshAddHomologyRequest", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshAddHomologyRequest(byte* type_, int* domainTags, nuint domainTags_n, int* subdomainTags, nuint subdomainTags_n, int* dims, nuint dims_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshClearHomologyRequests", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshClearHomologyRequests(int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshComputeHomology", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshComputeHomology(int** dimTags, nuint* dimTags_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshComputeCrossField", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshComputeCrossField(int** viewTags, nuint* viewTags_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshFieldAdd", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern int gmshModelMeshFieldAdd(byte* fieldType, int tag, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshFieldRemove", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshFieldRemove(int tag, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshFieldList", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshFieldList(int** tags, nuint* tags_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshFieldGetType", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshFieldGetType(int tag, byte** fileType, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshFieldSetNumber", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshFieldSetNumber(int tag, byte* option, double value, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshFieldGetNumber", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshFieldGetNumber(int tag, byte* option, double* value, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshFieldSetString", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshFieldSetString(int tag, byte* option, byte* value, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshFieldGetString", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshFieldGetString(int tag, byte* option, byte** value, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshFieldSetNumbers", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshFieldSetNumbers(int tag, byte* option, double* values, nuint values_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshFieldGetNumbers", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshFieldGetNumbers(int tag, byte* option, double** values, nuint* values_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshFieldSetAsBackgroundMesh", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshFieldSetAsBackgroundMesh(int tag, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelMeshFieldSetAsBoundaryLayer", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelMeshFieldSetAsBoundaryLayer(int tag, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelGeoAddPoint", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern int gmshModelGeoAddPoint(double x, double y, double z, double meshSize, int tag, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelGeoAddLine", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern int gmshModelGeoAddLine(int startTag, int endTag, int tag, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelGeoAddCircleArc", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern int gmshModelGeoAddCircleArc(int startTag, int centerTag, int endTag, int tag, double nx, double ny, double nz, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelGeoAddEllipseArc", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern int gmshModelGeoAddEllipseArc(int startTag, int centerTag, int majorTag, int endTag, int tag, double nx, double ny, double nz, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelGeoAddSpline", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern int gmshModelGeoAddSpline(int* pointTags, nuint pointTags_n, int tag, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelGeoAddBSpline", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern int gmshModelGeoAddBSpline(int* pointTags, nuint pointTags_n, int tag, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelGeoAddBezier", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern int gmshModelGeoAddBezier(int* pointTags, nuint pointTags_n, int tag, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelGeoAddPolyline", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern int gmshModelGeoAddPolyline(int* pointTags, nuint pointTags_n, int tag, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelGeoAddCompoundSpline", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern int gmshModelGeoAddCompoundSpline(int* curveTags, nuint curveTags_n, int numIntervals, int tag, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelGeoAddCompoundBSpline", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern int gmshModelGeoAddCompoundBSpline(int* curveTags, nuint curveTags_n, int numIntervals, int tag, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelGeoAddCurveLoop", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern int gmshModelGeoAddCurveLoop(int* curveTags, nuint curveTags_n, int tag, int reorient, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelGeoAddCurveLoops", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelGeoAddCurveLoops(int* curveTags, nuint curveTags_n, int** tags, nuint* tags_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelGeoAddPlaneSurface", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern int gmshModelGeoAddPlaneSurface(int* wireTags, nuint wireTags_n, int tag, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelGeoAddSurfaceFilling", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern int gmshModelGeoAddSurfaceFilling(int* wireTags, nuint wireTags_n, int tag, int sphereCenterTag, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelGeoAddSurfaceLoop", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern int gmshModelGeoAddSurfaceLoop(int* surfaceTags, nuint surfaceTags_n, int tag, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelGeoAddVolume", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern int gmshModelGeoAddVolume(int* shellTags, nuint shellTags_n, int tag, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelGeoAddGeometry", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern int gmshModelGeoAddGeometry(byte* geometry, double* numbers, nuint numbers_n, byte** strings, nuint strings_n, int tag, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelGeoAddPointOnGeometry", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern int gmshModelGeoAddPointOnGeometry(int geometryTag, double x, double y, double z, double meshSize, int tag, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelGeoExtrude", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelGeoExtrude(int* dimTags, nuint dimTags_n, double dx, double dy, double dz, int** outDimTags, nuint* outDimTags_n, int* numElements, nuint numElements_n, double* heights, nuint heights_n, int recombine, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelGeoRevolve", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelGeoRevolve(int* dimTags, nuint dimTags_n, double x, double y, double z, double ax, double ay, double az, double angle, int** outDimTags, nuint* outDimTags_n, int* numElements, nuint numElements_n, double* heights, nuint heights_n, int recombine, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelGeoTwist", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelGeoTwist(int* dimTags, nuint dimTags_n, double x, double y, double z, double dx, double dy, double dz, double ax, double ay, double az, double angle, int** outDimTags, nuint* outDimTags_n, int* numElements, nuint numElements_n, double* heights, nuint heights_n, int recombine, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelGeoExtrudeBoundaryLayer", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelGeoExtrudeBoundaryLayer(int* dimTags, nuint dimTags_n, int** outDimTags, nuint* outDimTags_n, int* numElements, nuint numElements_n, double* heights, nuint heights_n, int recombine, int second, int viewIndex, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelGeoTranslate", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelGeoTranslate(int* dimTags, nuint dimTags_n, double dx, double dy, double dz, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelGeoRotate", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelGeoRotate(int* dimTags, nuint dimTags_n, double x, double y, double z, double ax, double ay, double az, double angle, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelGeoDilate", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelGeoDilate(int* dimTags, nuint dimTags_n, double x, double y, double z, double a, double b, double c, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelGeoMirror", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelGeoMirror(int* dimTags, nuint dimTags_n, double a, double b, double c, double d, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelGeoSymmetrize", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelGeoSymmetrize(int* dimTags, nuint dimTags_n, double a, double b, double c, double d, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelGeoCopy", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelGeoCopy(int* dimTags, nuint dimTags_n, int** outDimTags, nuint* outDimTags_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelGeoRemove", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelGeoRemove(int* dimTags, nuint dimTags_n, int recursive, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelGeoRemoveAllDuplicates", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelGeoRemoveAllDuplicates(int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelGeoSplitCurve", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelGeoSplitCurve(int tag, int* pointTags, nuint pointTags_n, int** curveTags, nuint* curveTags_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelGeoGetMaxTag", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern int gmshModelGeoGetMaxTag(int dim, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelGeoSetMaxTag", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelGeoSetMaxTag(int dim, int maxTag, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelGeoAddPhysicalGroup", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern int gmshModelGeoAddPhysicalGroup(int dim, int* tags, nuint tags_n, int tag, byte* name, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelGeoRemovePhysicalGroups", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelGeoRemovePhysicalGroups(int* dimTags, nuint dimTags_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelGeoSynchronize", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelGeoSynchronize(int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelGeoMeshSetSize", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelGeoMeshSetSize(int* dimTags, nuint dimTags_n, double size, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelGeoMeshSetTransfiniteCurve", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelGeoMeshSetTransfiniteCurve(int tag, int nPoints, byte* meshType, double coef, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelGeoMeshSetTransfiniteSurface", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelGeoMeshSetTransfiniteSurface(int tag, byte* arrangement, int* cornerTags, nuint cornerTags_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelGeoMeshSetTransfiniteVolume", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelGeoMeshSetTransfiniteVolume(int tag, int* cornerTags, nuint cornerTags_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelGeoMeshSetRecombine", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelGeoMeshSetRecombine(int dim, int tag, double angle, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelGeoMeshSetSmoothing", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelGeoMeshSetSmoothing(int dim, int tag, int val, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelGeoMeshSetReverse", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelGeoMeshSetReverse(int dim, int tag, int val, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelGeoMeshSetAlgorithm", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelGeoMeshSetAlgorithm(int dim, int tag, int val, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelGeoMeshSetSizeFromBoundary", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelGeoMeshSetSizeFromBoundary(int dim, int tag, int val, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelOccAddPoint", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern int gmshModelOccAddPoint(double x, double y, double z, double meshSize, int tag, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelOccAddLine", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern int gmshModelOccAddLine(int startTag, int endTag, int tag, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelOccAddCircleArc", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern int gmshModelOccAddCircleArc(int startTag, int middleTag, int endTag, int tag, int center, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelOccAddCircle", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern int gmshModelOccAddCircle(double x, double y, double z, double r, int tag, double angle1, double angle2, double* zAxis, nuint zAxis_n, double* xAxis, nuint xAxis_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelOccAddEllipseArc", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern int gmshModelOccAddEllipseArc(int startTag, int centerTag, int majorTag, int endTag, int tag, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelOccAddEllipse", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern int gmshModelOccAddEllipse(double x, double y, double z, double r1, double r2, int tag, double angle1, double angle2, double* zAxis, nuint zAxis_n, double* xAxis, nuint xAxis_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelOccAddSpline", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern int gmshModelOccAddSpline(int* pointTags, nuint pointTags_n, int tag, double* tangents, nuint tangents_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelOccAddBSpline", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern int gmshModelOccAddBSpline(int* pointTags, nuint pointTags_n, int tag, int degree, double* weights, nuint weights_n, double* knots, nuint knots_n, int* multiplicities, nuint multiplicities_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelOccAddBezier", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern int gmshModelOccAddBezier(int* pointTags, nuint pointTags_n, int tag, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelOccAddWire", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern int gmshModelOccAddWire(int* curveTags, nuint curveTags_n, int tag, int checkClosed, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelOccAddCurveLoop", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern int gmshModelOccAddCurveLoop(int* curveTags, nuint curveTags_n, int tag, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelOccAddRectangle", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern int gmshModelOccAddRectangle(double x, double y, double z, double dx, double dy, int tag, double roundedRadius, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelOccAddDisk", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern int gmshModelOccAddDisk(double xc, double yc, double zc, double rx, double ry, int tag, double* zAxis, nuint zAxis_n, double* xAxis, nuint xAxis_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelOccAddPlaneSurface", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern int gmshModelOccAddPlaneSurface(int* wireTags, nuint wireTags_n, int tag, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelOccAddSurfaceFilling", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern int gmshModelOccAddSurfaceFilling(int wireTag, int tag, int* pointTags, nuint pointTags_n, int degree, int numPointsOnCurves, int numIter, int anisotropic, double tol2d, double tol3d, double tolAng, double tolCurv, int maxDegree, int maxSegments, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelOccAddBSplineFilling", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern int gmshModelOccAddBSplineFilling(int wireTag, int tag, byte* type_, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelOccAddBezierFilling", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern int gmshModelOccAddBezierFilling(int wireTag, int tag, byte* type_, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelOccAddBSplineSurface", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern int gmshModelOccAddBSplineSurface(int* pointTags, nuint pointTags_n, int numPointsU, int tag, int degreeU, int degreeV, double* weights, nuint weights_n, double* knotsU, nuint knotsU_n, double* knotsV, nuint knotsV_n, int* multiplicitiesU, nuint multiplicitiesU_n, int* multiplicitiesV, nuint multiplicitiesV_n, int* wireTags, nuint wireTags_n, int wire3D, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelOccAddBezierSurface", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern int gmshModelOccAddBezierSurface(int* pointTags, nuint pointTags_n, int numPointsU, int tag, int* wireTags, nuint wireTags_n, int wire3D, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelOccAddTrimmedSurface", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern int gmshModelOccAddTrimmedSurface(int surfaceTag, int* wireTags, nuint wireTags_n, int wire3D, int tag, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelOccAddSurfaceLoop", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern int gmshModelOccAddSurfaceLoop(int* surfaceTags, nuint surfaceTags_n, int tag, int sewing, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelOccAddVolume", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern int gmshModelOccAddVolume(int* shellTags, nuint shellTags_n, int tag, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelOccAddSphere", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern int gmshModelOccAddSphere(double xc, double yc, double zc, double radius, int tag, double angle1, double angle2, double angle3, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelOccAddBox", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern int gmshModelOccAddBox(double x, double y, double z, double dx, double dy, double dz, int tag, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelOccAddCylinder", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern int gmshModelOccAddCylinder(double x, double y, double z, double dx, double dy, double dz, double r, int tag, double angle, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelOccAddCone", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern int gmshModelOccAddCone(double x, double y, double z, double dx, double dy, double dz, double r1, double r2, int tag, double angle, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelOccAddWedge", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern int gmshModelOccAddWedge(double x, double y, double z, double dx, double dy, double dz, int tag, double ltx, double* zAxis, nuint zAxis_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelOccAddTorus", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern int gmshModelOccAddTorus(double x, double y, double z, double r1, double r2, int tag, double angle, double* zAxis, nuint zAxis_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelOccAddThruSections", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelOccAddThruSections(int* wireTags, nuint wireTags_n, int** outDimTags, nuint* outDimTags_n, int tag, int makeSolid, int makeRuled, int maxDegree, byte* continuity, byte* parametrization, int smoothing, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelOccAddThickSolid", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelOccAddThickSolid(int volumeTag, int* excludeSurfaceTags, nuint excludeSurfaceTags_n, double offset, int** outDimTags, nuint* outDimTags_n, int tag, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelOccExtrude", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelOccExtrude(int* dimTags, nuint dimTags_n, double dx, double dy, double dz, int** outDimTags, nuint* outDimTags_n, int* numElements, nuint numElements_n, double* heights, nuint heights_n, int recombine, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelOccRevolve", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelOccRevolve(int* dimTags, nuint dimTags_n, double x, double y, double z, double ax, double ay, double az, double angle, int** outDimTags, nuint* outDimTags_n, int* numElements, nuint numElements_n, double* heights, nuint heights_n, int recombine, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelOccAddPipe", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelOccAddPipe(int* dimTags, nuint dimTags_n, int wireTag, int** outDimTags, nuint* outDimTags_n, byte* trihedron, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelOccFillet", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelOccFillet(int* volumeTags, nuint volumeTags_n, int* curveTags, nuint curveTags_n, double* radii, nuint radii_n, int** outDimTags, nuint* outDimTags_n, int removeVolume, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelOccChamfer", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelOccChamfer(int* volumeTags, nuint volumeTags_n, int* curveTags, nuint curveTags_n, int* surfaceTags, nuint surfaceTags_n, double* distances, nuint distances_n, int** outDimTags, nuint* outDimTags_n, int removeVolume, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelOccDefeature", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelOccDefeature(int* volumeTags, nuint volumeTags_n, int* surfaceTags, nuint surfaceTags_n, int** outDimTags, nuint* outDimTags_n, int removeVolume, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelOccFillet2D", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern int gmshModelOccFillet2D(int edgeTag1, int edgeTag2, double radius, int tag, int pointTag, int reverse, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelOccChamfer2D", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern int gmshModelOccChamfer2D(int edgeTag1, int edgeTag2, double distance1, double distance2, int tag, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelOccOffsetCurve", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelOccOffsetCurve(int curveLoopTag, double offset, int** outDimTags, nuint* outDimTags_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelOccGetDistance", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelOccGetDistance(int dim1, int tag1, int dim2, int tag2, double* distance, double* x1, double* y1, double* z1, double* x2, double* y2, double* z2, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelOccTranslate", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelOccTranslate(int* dimTags, nuint dimTags_n, double dx, double dy, double dz, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelOccRotate", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelOccRotate(int* dimTags, nuint dimTags_n, double x, double y, double z, double ax, double ay, double az, double angle, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelOccDilate", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelOccDilate(int* dimTags, nuint dimTags_n, double x, double y, double z, double a, double b, double c, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelOccMirror", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelOccMirror(int* dimTags, nuint dimTags_n, double a, double b, double c, double d, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelOccSymmetrize", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelOccSymmetrize(int* dimTags, nuint dimTags_n, double a, double b, double c, double d, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelOccAffineTransform", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelOccAffineTransform(int* dimTags, nuint dimTags_n, double* affineTransform, nuint affineTransform_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelOccCopy", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelOccCopy(int* dimTags, nuint dimTags_n, int** outDimTags, nuint* outDimTags_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelOccRemove", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelOccRemove(int* dimTags, nuint dimTags_n, int recursive, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelOccRemoveAllDuplicates", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelOccRemoveAllDuplicates(int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelOccHealShapes", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelOccHealShapes(int** outDimTags, nuint* outDimTags_n, int* dimTags, nuint dimTags_n, double tolerance, int fixDegenerated, int fixSmallEdges, int fixSmallFaces, int sewFaces, int makeSolids, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelOccConvertToNURBS", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelOccConvertToNURBS(int* dimTags, nuint dimTags_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelOccImportShapes", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelOccImportShapes(byte* fileName, int** outDimTags, nuint* outDimTags_n, int highestDimOnly, byte* format, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelOccImportShapesNativePointer", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelOccImportShapesNativePointer(void* shape, int** outDimTags, nuint* outDimTags_n, int highestDimOnly, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelOccGetEntities", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelOccGetEntities(int** dimTags, nuint* dimTags_n, int dim, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelOccGetEntitiesInBoundingBox", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelOccGetEntitiesInBoundingBox(double xmin, double ymin, double zmin, double xmax, double ymax, double zmax, int** dimTags, nuint* dimTags_n, int dim, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelOccGetBoundingBox", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelOccGetBoundingBox(int dim, int tag, double* xmin, double* ymin, double* zmin, double* xmax, double* ymax, double* zmax, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelOccGetMass", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelOccGetMass(int dim, int tag, double* mass, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelOccGetCenterOfMass", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelOccGetCenterOfMass(int dim, int tag, double* x, double* y, double* z, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelOccGetMatrixOfInertia", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelOccGetMatrixOfInertia(int dim, int tag, double** mat, nuint* mat_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelOccGetMaxTag", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern int gmshModelOccGetMaxTag(int dim, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelOccSetMaxTag", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelOccSetMaxTag(int dim, int maxTag, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelOccSynchronize", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelOccSynchronize(int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshModelOccMeshSetSize", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshModelOccMeshSetSize(int* dimTags, nuint dimTags_n, double size, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshViewAdd", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern int gmshViewAdd(byte* name, int tag, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshViewRemove", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshViewRemove(int tag, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshViewGetIndex", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern int gmshViewGetIndex(int tag, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshViewGetTags", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshViewGetTags(int** tags, nuint* tags_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshViewAddModelData", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshViewAddModelData(int tag, int step, byte* modelName, byte* dataType, nuint* tags, nuint tags_n, double** data, nuint* data_n, nuint data_nn, double time, int numComponents, int partition, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshViewAddHomogeneousModelData", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshViewAddHomogeneousModelData(int tag, int step, byte* modelName, byte* dataType, nuint* tags, nuint tags_n, double* data, nuint data_n, double time, int numComponents, int partition, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshViewGetHomogeneousModelData", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshViewGetHomogeneousModelData(int tag, int step, byte** dataType, nuint** tags, nuint* tags_n, double** data, nuint* data_n, double* time, int* numComponents, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshViewAddListData", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshViewAddListData(int tag, byte* dataType, int numEle, double* data, nuint data_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshViewAddListDataString", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshViewAddListDataString(int tag, double* coord, nuint coord_n, byte** data, nuint data_n, byte** style, nuint style_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshViewSetInterpolationMatrices", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshViewSetInterpolationMatrices(int tag, byte* type_, int d, double* coef, nuint coef_n, double* exp, nuint exp_n, int dGeo, double* coefGeo, nuint coefGeo_n, double* expGeo, nuint expGeo_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshViewAddAlias", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern int gmshViewAddAlias(int refTag, int copyOptions, int tag, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshViewCombine", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshViewCombine(byte* what, byte* how, int remove, int copyOptions, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshViewProbe", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshViewProbe(int tag, double x, double y, double z, double** values, nuint* values_n, double* distance, int step, int numComp, int gradient, double distanceMax, double* xElemCoord, nuint xElemCoord_n, double* yElemCoord, nuint yElemCoord_n, double* zElemCoord, nuint zElemCoord_n, int dim, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshViewWrite", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshViewWrite(int tag, byte* fileName, int append, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshViewSetVisibilityPerWindow", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshViewSetVisibilityPerWindow(int tag, int value, int windowIndex, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshViewOptionSetNumber", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshViewOptionSetNumber(int tag, byte* name, double value, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshViewOptionGetNumber", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshViewOptionGetNumber(int tag, byte* name, double* value, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshViewOptionSetString", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshViewOptionSetString(int tag, byte* name, byte* value, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshViewOptionGetString", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshViewOptionGetString(int tag, byte* name, byte** value, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshViewOptionSetColor", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshViewOptionSetColor(int tag, byte* name, int r, int g, int b, int a, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshViewOptionGetColor", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshViewOptionGetColor(int tag, byte* name, int* r, int* g, int* b, int* a, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshViewOptionCopy", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshViewOptionCopy(int refTag, int tag, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshAlgorithmTriangulate", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshAlgorithmTriangulate(double* coordinates, nuint coordinates_n, nuint** triangles, nuint* triangles_n, nuint* edges, nuint edges_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshAlgorithmTetrahedralize", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshAlgorithmTetrahedralize(double* coordinates, nuint coordinates_n, nuint** tetrahedra, nuint* tetrahedra_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshPluginSetNumber", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshPluginSetNumber(byte* name, byte* option, double value, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshPluginSetString", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshPluginSetString(byte* name, byte* option, byte* value, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshPluginRun", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern int gmshPluginRun(byte* name, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshGraphicsDraw", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshGraphicsDraw(int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshFltkInitialize", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshFltkInitialize(int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshFltkFinalize", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshFltkFinalize(int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshFltkWait", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshFltkWait(double time, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshFltkUpdate", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshFltkUpdate(int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshFltkAwake", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshFltkAwake(byte* action, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshFltkLock", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshFltkLock(int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshFltkUnlock", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshFltkUnlock(int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshFltkRun", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshFltkRun(int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshFltkIsAvailable", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern int gmshFltkIsAvailable(int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshFltkSelectEntities", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern int gmshFltkSelectEntities(int** dimTags, nuint* dimTags_n, int dim, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshFltkSelectElements", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern int gmshFltkSelectElements(nuint** elementTags, nuint* elementTags_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshFltkSelectViews", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern int gmshFltkSelectViews(int** viewTags, nuint* viewTags_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshFltkSplitCurrentWindow", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshFltkSplitCurrentWindow(byte* how, double ratio, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshFltkSetCurrentWindow", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshFltkSetCurrentWindow(int windowIndex, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshFltkSetStatusMessage", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshFltkSetStatusMessage(byte* message, int graphics, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshFltkShowContextWindow", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshFltkShowContextWindow(int dim, int tag, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshFltkOpenTreeItem", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshFltkOpenTreeItem(byte* name, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshFltkCloseTreeItem", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshFltkCloseTreeItem(byte* name, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshParserSetNumber", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshParserSetNumber(byte* name, double* value, nuint value_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshParserSetString", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshParserSetString(byte* name, byte** value, nuint value_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshParserGetNumber", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshParserGetNumber(byte* name, double** value, nuint* value_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshParserClear", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshParserClear(byte* name, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshParserParse", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshParserParse(byte* fileName, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshOnelabSet", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshOnelabSet(byte* data, byte* format, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshOnelabGet", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshOnelabGet(byte** data, byte* name, byte* format, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshOnelabSetNumber", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshOnelabSetNumber(byte* name, double* value, nuint value_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshOnelabSetString", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshOnelabSetString(byte* name, byte** value, nuint value_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshOnelabGetNumber", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshOnelabGetNumber(byte* name, double** value, nuint* value_n, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshOnelabGetChanged", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern int gmshOnelabGetChanged(byte* name, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshOnelabSetChanged", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshOnelabSetChanged(byte* name, int value, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshOnelabClear", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshOnelabClear(byte* name, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshOnelabRun", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshOnelabRun(byte* name, byte* command, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshLoggerWrite", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshLoggerWrite(byte* message, byte* level, int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshLoggerStart", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshLoggerStart(int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshLoggerStop", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshLoggerStop(int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshLoggerGetWallTime", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern double gmshLoggerGetWallTime(int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshLoggerGetCpuTime", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern double gmshLoggerGetCpuTime(int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshLoggerGetMemory", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern double gmshLoggerGetMemory(int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshLoggerGetTotalMemory", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern double gmshLoggerGetTotalMemory(int* ierr);

        [DllImport(__DllName, EntryPoint = "gmshLoggerGetLastError", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void gmshLoggerGetLastError(byte** error, int* ierr);


    }



}
